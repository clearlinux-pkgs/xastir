From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tom Russo <russo@bogodyn.org>
Date: Wed, 3 Mar 2021 10:34:50 -0700
Subject: [PATCH] Update proj probe to look for modern function

Recent versions of libproj deprecated the decades-old PROJ.4 API in
favor of a much more flexible and modern version.

Xastir has always looked for one of the functions (pj_init) in the original API
in its configure probe.  Since this function will be going away in
proj 7 we can't just keep doing that.

Now, configure probes for the function proj_create_crs_to_crs
instead.  If it finds it, we have a newer libproj and we use it.  If
it doesn't, it tries again with pj_init -- and if it finds *THAT* then
we have an older libproj and use it.

Xastir doesn't even use libproj.  Our proj probe is very ancient and
is there because in the old days no package systems had geotiff and
everyone who wanted geotiff support had to build it from source
themselves.  That generally wound up creating static libraries, and
therefore one had to specify all the dependencies explicitly.  Geotiff
requires proj, so to get geotiff working from a static-built library
you also have to link proj with Xastir.

These days every package management system has geotiff and it's a
shared library, so proj is pulled in automatically at run time.  This
lingering probe is there only to support hardcore folks who build
everything themselves from source.

Now it will keep working even when proj 7 starts  showing up in
package systems.

Closes #173
---
 configure.ac | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/configure.ac b/configure.ac
index e7f93ae..cb3e3bf 100644
--- a/configure.ac
+++ b/configure.ac
@@ -353,14 +353,18 @@ AC_CHECK_FUNCS([strndup])
 #this is also a recent extension that should not be counted on
 AC_CHECK_FUNCS([roundf])
  
-# Check for libproj (need to do this before test for shapelib, because
-# the shapelib test asks about "use_proj"
+# Check for libproj (need to do this before test for geotiff, which is the
+# only thing we have that uses proj
+
 use_proj=yes
 AC_ARG_WITH(libproj,[  --without-libproj         Disable libproj features.],use_proj=$withval)
 if test "${use_proj}" = "yes"; then
   use_proj=no
-  AC_CHECK_LIB(proj, pj_init, use_proj=yes LIBS="$LIBS -lproj"
-    AC_DEFINE(HAVE_PROJ, 1, Define to 1 if you have the `libproj' library (-lproj). )
+  AC_CHECK_LIB([proj], [proj_create_crs_to_crs], [use_proj=yes LIBS="$LIBS -lproj"
+    AC_DEFINE(HAVE_PROJ, 1, Define to 1 if you have the `libproj' library (-lproj). )],
+    [  AC_CHECK_LIB([proj], [pj_init], [use_proj=yes LIBS="$LIBS -lproj"
+    AC_DEFINE(HAVE_PROJ, 1, Define to 1 if you have the `libproj' library (-lproj). )])]
+
   )
 fi
 
@@ -368,9 +372,6 @@ fi
 # Check for Shapelib
 use_shapelib=yes
 shapelib_desired=yes
-# This symbol will be blank if the proj library hasn't been found, and will
-# have the three programs that need proj if it has
-CONTSHP=""
 AC_ARG_WITH(shapelib,[  --without-shapelib        Disable shapelib features.],shapelib_desired=$withval)
 if test "${shapelib_desired}" = "no"; then
   use_shapelib=no
